@import "elr-scss-functions/src/main";
@import "elr-scss-config/src/main";

@mixin elr-triangle($config: ()) {
  $config: extend(
    (
      direction: "top",
      base: 50px,
      height: "half",
      color: $light-gray,
    ),
    $config
  );

  $direction: map-get($config, direction);
  $base: map-get($config, base);
  $height: map-get($config, height);
  $color: map-get($config, color);

  @if (
    $direction ==
      "top" or
      $direction ==
      "right" or
      $direction ==
      "bottom" or
      $direction ==
      "left"
  ) {
    @if ($height == "half") {
      $height: math.div($base, 2);
    } @else if ($height == auto) {
      $height: $base;
    }
  } @else if
    (
      $direction ==
        "top-left" or
        $direction ==
        "top-right" or
        $direction ==
        "bottom-left" or
        $direction ==
        "bottom-right"
    )
  {
    @if ($height == "half" or $height == auto) {
      $height: math.div($base, 2);
    }
  }
  // width is divided by 2 because it's used twice !
  $base: math.div($base, 2);
  width: 0;
  height: 0;

  @if ($direction == "top") {
    // border-top
    border-right: $base solid transparent;
    border-bottom: $height solid $color;
    border-left: $base solid transparent;
  } @else if ($direction == "bottom") {
    border-top: $height solid $color;
    border-right: $base solid transparent;
    // border-bottom
    border-left: $base solid transparent;
  } @else if ($direction == "left") {
    border-top: $base solid transparent;
    border-right: $height solid $color;
    border-bottom: $base solid transparent;
    // border-left
  } @else if ($direction == "right") {
    border-top: $base solid transparent;
    // border-right
    border-bottom: $base solid transparent;
    border-left: $height solid $color;
  } @else if ($direction == "top-left") {
    border-top: $height solid $color;
    border-right: $base solid transparent;
    border-bottom: $height solid transparent;
    border-left: $base solid $color;
  } @else if ($direction == "top-right") {
    border-top: $height solid $color;
    border-right: $base solid $color;
    border-bottom: $height solid transparent;
    border-left: $base solid transparent;
  } @else if ($direction == "bottom-left") {
    border-top: $height solid transparent;
    border-right: $base solid transparent;
    border-bottom: $height solid $color;
    border-left: $base solid $color;
  } @else if ($direction == "bottom-right") {
    border-top: $height solid transparent;
    border-right: $base solid $color;
    border-bottom: $height solid $color;
    border-left: $base solid transparent;
  }
}

// provide width and height with no units to calculate ratio
// for a square provide equal width & height
@mixin elr-ratiobox($config: ()) {
  $config: extend(
    (
      width: 300,
      height: 300,
    ),
    $config
  );

  $width: map-get($config, width);
  $height: map-get($config, height);

  $img-ratio: get-aspect-ratio($width, $height);

  display: inline-block;
  position: relative;

  &::after {
    content: "";
    padding-top: $img-ratio * 100%;
    display: block;
  }

  .elr-ratiobox-inner {
    height: 100%;
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    left: 0;
  }

  .elr-ratiobox-centeredtext {
    @include elr-centerer(
      $config: (
        vertical: true,
        horizontal: false,
      )
    );
    text-align: center;
    padding: 0 20px;
    width: 100%;
  }

  .elr-ratiobox-img-wrapper {
    height: 100%;
    overflow: hidden;
  }

  .elr-ratiobox-img {
    transform: translate(-50%, -50%);
    position: relative;
    left: 50%;
    top: 50%;
    width: auto;
    max-width: none;
    height: 100%;
  }

  .elr-box-link {
    display: block;
    height: 100%;
  }
}
